import { serve } from "https://deno.land/std@0.168.0/http/server.ts"
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.45.0'

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders })
  }

  try {
    console.log('üîÑ Iniciando atualiza√ß√£o de cota√ß√µes')
    
    // Buscar cota√ß√£o do d√≥lar de uma API p√∫blica
    const exchangeResponse = await fetch('https://api.exchangerate-api.com/v4/latest/USD')
    
    if (!exchangeResponse.ok) {
      throw new Error(`Erro na API de c√¢mbio: ${exchangeResponse.status}`)
    }
    
    const exchangeData = await exchangeResponse.json()
    const usdToBrl = exchangeData.rates.BRL
    
    if (!usdToBrl) {
      throw new Error('Cota√ß√£o BRL n√£o encontrada na resposta da API')
    }

    console.log('üí∞ Cota√ß√£o USD/BRL obtida:', usdToBrl)

    // Atualizar no banco de dados
    const supabaseService = createClient(
      Deno.env.get('SUPABASE_URL') ?? '',
      Deno.env.get('SUPABASE_SERVICE_ROLE_KEY') ?? '',
      { auth: { persistSession: false } }
    )

    // Inserir ou atualizar cota√ß√£o
    const { error: upsertError } = await supabaseService
      .from('cotacoes')
      .upsert({
        moeda: 'USD',
        valor_brl: usdToBrl,
        data_atualizacao: new Date().toISOString(),
        fonte: 'exchangerate-api.com'
      }, {
        onConflict: 'moeda'
      })

    if (upsertError) {
      throw new Error(`Erro ao salvar cota√ß√£o: ${upsertError.message}`)
    }

    console.log('‚úÖ Cota√ß√£o salva no banco de dados')

    // Chamar fun√ß√£o para atualizar pre√ßos dos produtos Kommo
    const { error: functionError } = await supabaseService.rpc('atualizar_precos_kommo')
    
    if (functionError) {
      console.error('‚ö†Ô∏è Erro ao atualizar produtos Kommo:', functionError.message)
      // N√£o falhar a opera√ß√£o por este erro
    } else {
      console.log('‚úÖ Pre√ßos dos produtos Kommo atualizados')
    }

    return new Response(JSON.stringify({
      success: true,
      usd_brl_rate: usdToBrl,
      updated_at: new Date().toISOString(),
      message: 'Cota√ß√£o atualizada com sucesso'
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      status: 200
    })

  } catch (error) {
    console.error('‚ùå Erro na atualiza√ß√£o de cota√ß√µes:', error)
    
    return new Response(JSON.stringify({ 
      success: false,
      error: error.message,
      updated_at: new Date().toISOString()
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      status: 500
    })
  }
})